grammar iit.dsl.transspecs.TransSpecs with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
    
generate transSpecs "http://www.dsl.iit/TransSpecs"

DesiredTransforms:
    Title name= ID
    framesList = FramesList
    transforms = TransformsList
    jacobians = JacobiansList?
;

Title : "Robot" | "Model" ;

FramesList:
    "Frames""{"
        items += Frame
        (','items += Frame)*
     "}"
;
Frame: name=ID;

TransformsList: {TransformsList}
    "Transforms" "{"
        specs+=FramePair*
    "}"
;

JacobiansList: {JacobiansList}
    "Jacobians" "{"
       specs+=FramePair*
    "}"
;

FramePair:
    ExplicitFramePair | ImplicitFramePair
;

// This rule is basically an unordered group of two elements
// The unordered group is modeled explicitly (rather than with the '&' syntax
//   of Xtext) to allow for the optional comma. The optional comma is there for
//   backward compatibility with older versions of the grammar.
ExplicitFramePair:
    (LeftFrame "="base  =[Frame] ','? RightFrame"="target=[Frame]) |
    (RightFrame"="target=[Frame] ','? LeftFrame "="base  =[Frame])
;

LeftFrame : ("base"|"left"|"left_frame");
RightFrame: ("target"|"right"|"right_frame");

ImplicitFramePair:
    (target=[Frame] "->" base=[Frame]) |
    (base=[Frame] "<-" target=[Frame])
;